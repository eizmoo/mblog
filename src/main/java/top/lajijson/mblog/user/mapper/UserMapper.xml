<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="top.lajijson.mblog.user.dao.UserMapper">
    <resultMap id="BaseResultMap" type="top.lajijson.mblog.user.entity.User">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="nick_name" property="nickName" jdbcType="VARCHAR"/>
        <result column="account" property="account" jdbcType="VARCHAR"/>
        <result column="password" property="password" jdbcType="VARCHAR"/>
        <result column="ip" property="ip" jdbcType="VARCHAR"/>
        <result column="status" property="status" jdbcType="BIT"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
        <result column="salt" property="salt" jdbcType="VARCHAR"/>
    </resultMap>
    <sql id="Base_Column_List">
        id,
        nick_name,
        account,
        password,
        ip,
        status,
        create_time,
        update_time,
        salt
    </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from user
        where id = #{id,jdbcType=INTEGER}
    </select>
    <select id="queryCountByAccount" resultType="java.lang.Integer">
        select count(1)
        from user
        <include refid="conditions"/>
    </select>
    <select id="queryByAccount" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from user
        <include refid="conditions"/>
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete
        from user
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="top.lajijson.mblog.user.entity.User">
        insert into user (id, nick_name, account,
                          password, ip, status, create_time,
                          update_time, salt)
        values (#{id,jdbcType=INTEGER}, #{nickName,jdbcType=VARCHAR}, #{account,jdbcType=VARCHAR},
                #{password,jdbcType=VARCHAR}, #{ip,jdbcType=VARCHAR}, #{status,jdbcType=BIT},
                #{createTime,jdbcType=TIMESTAMP},
                #{updateTime,jdbcType=TIMESTAMP}, #{salt,jdbcType=VARCHAR})
    </insert>
    <insert id="insertSelective" parameterType="top.lajijson.mblog.user.entity.User">
        insert into user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="nickName != null">
                nick_name,
            </if>
            <if test="account != null">
                account,
            </if>
            <if test="password != null">
                password,
            </if>
            <if test="ip != null">
                ip,
            </if>
            <if test="status != null">
                status,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
            <if test="salt != null">
                salt,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="nickName != null">
                #{nickName,jdbcType=VARCHAR},
            </if>
            <if test="account != null">
                #{account,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                #{password,jdbcType=VARCHAR},
            </if>
            <if test="ip != null">
                #{ip,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                #{status,jdbcType=BIT},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="salt != null">
                #{salt,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="top.lajijson.mblog.user.entity.User">
        update user
        <set>
            <if test="nickName != null">
                nick_name = #{nickName,jdbcType=VARCHAR},
            </if>
            <if test="account != null">
                account = #{account,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                password = #{password,jdbcType=VARCHAR},
            </if>
            <if test="ip != null">
                ip = #{ip,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=BIT},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="salt != null">
                salt = #{salt,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="top.lajijson.mblog.user.entity.User">
        update user
        set nick_name   = #{nickName,jdbcType=VARCHAR},
            account     = #{account,jdbcType=VARCHAR},
            password    = #{password,jdbcType=VARCHAR},
            ip          = #{ip,jdbcType=VARCHAR},
            status      = #{status,jdbcType=BIT},
            create_time = #{createTime,jdbcType=TIMESTAMP},
            update_time = #{updateTime,jdbcType=TIMESTAMP},
            salt        = #{salt,jdbcType=VARCHAR}
        where id = #{id,jdbcType=INTEGER}
    </update>

    <sql id="conditions">
        <trim prefix="where" prefixOverrides="and">
            <if test="account != null">
                and account = #{account,jdbcType=VARCHAR}
            </if>
        </trim>
    </sql>
</mapper>